{"id":"C7wy","dependencies":[{"name":"C:\\Users\\Veeno\\Desktop\\fse\\react-widget\\package.json","includedInParent":true,"mtime":1662043584758},{"name":"C:\\Users\\Veeno\\Desktop\\fse\\react-widget\\node_modules\\@supabase\\postgrest-js\\package.json","includedInParent":true,"mtime":1658448861221},{"name":"./types","loc":{"line":1,"column":33,"index":33},"parent":"C:\\Users\\Veeno\\Desktop\\fse\\react-widget\\node_modules\\@supabase\\postgrest-js\\dist\\module\\lib\\PostgrestQueryBuilder.js","resolved":"C:\\Users\\Veeno\\Desktop\\fse\\react-widget\\node_modules\\@supabase\\postgrest-js\\dist\\module\\lib\\types.js"},{"name":"./PostgrestFilterBuilder","loc":{"line":2,"column":35,"index":79},"parent":"C:\\Users\\Veeno\\Desktop\\fse\\react-widget\\node_modules\\@supabase\\postgrest-js\\dist\\module\\lib\\PostgrestQueryBuilder.js","resolved":"C:\\Users\\Veeno\\Desktop\\fse\\react-widget\\node_modules\\@supabase\\postgrest-js\\dist\\module\\lib\\PostgrestFilterBuilder.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var e=require(\"./types\"),t=r(require(\"./PostgrestFilterBuilder\"));function r(e){return e&&e.__esModule?e:{default:e}}class s extends e.PostgrestBuilder{constructor(e,{headers:t={},schema:r,fetch:s,shouldThrowOnError:n}={}){super({fetch:s,shouldThrowOnError:n}),this.url=new URL(e),this.headers=Object.assign({},t),this.schema=r}select(e=\"*\",{head:r=!1,count:s=null}={}){this.method=\"GET\";let n=!1;const i=e.split(\"\").map(e=>/\\s/.test(e)&&!n?\"\":('\"'===e&&(n=!n),e)).join(\"\");return this.url.searchParams.set(\"select\",i),s&&(this.headers.Prefer=`count=${s}`),r&&(this.method=\"HEAD\"),new t.default(this)}insert(e,{upsert:r=!1,onConflict:s,returning:n=\"representation\",count:i=null}={}){this.method=\"POST\";const h=[`return=${n}`];if(r&&h.push(\"resolution=merge-duplicates\"),r&&void 0!==s&&this.url.searchParams.set(\"on_conflict\",s),this.body=e,i&&h.push(`count=${i}`),this.headers.Prefer&&h.unshift(this.headers.Prefer),this.headers.Prefer=h.join(\",\"),Array.isArray(e)){const t=e.reduce((e,t)=>e.concat(Object.keys(t)),[]);if(t.length>0){const e=[...new Set(t)].map(e=>`\"${e}\"`);this.url.searchParams.set(\"columns\",e.join(\",\"))}}return new t.default(this)}upsert(e,{onConflict:r,returning:s=\"representation\",count:n=null,ignoreDuplicates:i=!1}={}){this.method=\"POST\";const h=[`resolution=${i?\"ignore\":\"merge\"}-duplicates`,`return=${s}`];return void 0!==r&&this.url.searchParams.set(\"on_conflict\",r),this.body=e,n&&h.push(`count=${n}`),this.headers.Prefer&&h.unshift(this.headers.Prefer),this.headers.Prefer=h.join(\",\"),new t.default(this)}update(e,{returning:r=\"representation\",count:s=null}={}){this.method=\"PATCH\";const n=[`return=${r}`];return this.body=e,s&&n.push(`count=${s}`),this.headers.Prefer&&n.unshift(this.headers.Prefer),this.headers.Prefer=n.join(\",\"),new t.default(this)}delete({returning:e=\"representation\",count:r=null}={}){this.method=\"DELETE\";const s=[`return=${e}`];return r&&s.push(`count=${r}`),this.headers.Prefer&&s.unshift(this.headers.Prefer),this.headers.Prefer=s.join(\",\"),new t.default(this)}}exports.default=s;"},"sourceMaps":null,"error":null,"hash":"bbbe20345469e1f808116e4c59a0fdc8","cacheData":{"env":{}}}