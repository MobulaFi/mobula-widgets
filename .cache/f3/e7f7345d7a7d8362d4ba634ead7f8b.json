{"id":"Mm0K","dependencies":[{"name":"C:\\Users\\Veeno\\Desktop\\fse\\react-widget\\package.json","includedInParent":true,"mtime":1662043584758},{"name":"C:\\Users\\Veeno\\Desktop\\fse\\react-widget\\node_modules\\@supabase\\postgrest-js\\package.json","includedInParent":true,"mtime":1658448861221},{"name":"./PostgrestTransformBuilder","loc":{"line":1,"column":38,"index":38},"parent":"C:\\Users\\Veeno\\Desktop\\fse\\react-widget\\node_modules\\@supabase\\postgrest-js\\dist\\module\\lib\\PostgrestFilterBuilder.js","resolved":"C:\\Users\\Veeno\\Desktop\\fse\\react-widget\\node_modules\\@supabase\\postgrest-js\\dist\\module\\lib\\PostgrestTransformBuilder.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var r=s(require(\"./PostgrestTransformBuilder\"));function s(r){return r&&r.__esModule?r:{default:r}}class t extends r.default{constructor(){super(...arguments),this.cs=this.contains,this.cd=this.containedBy,this.sl=this.rangeLt,this.sr=this.rangeGt,this.nxl=this.rangeGte,this.nxr=this.rangeLte,this.adj=this.rangeAdjacent,this.ov=this.overlaps}not(r,s,t){return this.url.searchParams.append(`${r}`,`not.${s}.${t}`),this}or(r,{foreignTable:s}={}){const t=void 0===s?\"or\":`${s}.or`;return this.url.searchParams.append(t,`(${r})`),this}eq(r,s){return this.url.searchParams.append(`${r}`,`eq.${s}`),this}neq(r,s){return this.url.searchParams.append(`${r}`,`neq.${s}`),this}gt(r,s){return this.url.searchParams.append(`${r}`,`gt.${s}`),this}gte(r,s){return this.url.searchParams.append(`${r}`,`gte.${s}`),this}lt(r,s){return this.url.searchParams.append(`${r}`,`lt.${s}`),this}lte(r,s){return this.url.searchParams.append(`${r}`,`lte.${s}`),this}like(r,s){return this.url.searchParams.append(`${r}`,`like.${s}`),this}ilike(r,s){return this.url.searchParams.append(`${r}`,`ilike.${s}`),this}is(r,s){return this.url.searchParams.append(`${r}`,`is.${s}`),this}in(r,s){const t=s.map(r=>\"string\"==typeof r&&new RegExp(\"[,()]\").test(r)?`\"${r}\"`:`${r}`).join(\",\");return this.url.searchParams.append(`${r}`,`in.(${t})`),this}contains(r,s){return\"string\"==typeof s?this.url.searchParams.append(`${r}`,`cs.${s}`):Array.isArray(s)?this.url.searchParams.append(`${r}`,`cs.{${s.join(\",\")}}`):this.url.searchParams.append(`${r}`,`cs.${JSON.stringify(s)}`),this}containedBy(r,s){return\"string\"==typeof s?this.url.searchParams.append(`${r}`,`cd.${s}`):Array.isArray(s)?this.url.searchParams.append(`${r}`,`cd.{${s.join(\",\")}}`):this.url.searchParams.append(`${r}`,`cd.${JSON.stringify(s)}`),this}rangeLt(r,s){return this.url.searchParams.append(`${r}`,`sl.${s}`),this}rangeGt(r,s){return this.url.searchParams.append(`${r}`,`sr.${s}`),this}rangeGte(r,s){return this.url.searchParams.append(`${r}`,`nxl.${s}`),this}rangeLte(r,s){return this.url.searchParams.append(`${r}`,`nxr.${s}`),this}rangeAdjacent(r,s){return this.url.searchParams.append(`${r}`,`adj.${s}`),this}overlaps(r,s){return\"string\"==typeof s?this.url.searchParams.append(`${r}`,`ov.${s}`):this.url.searchParams.append(`${r}`,`ov.{${s.join(\",\")}}`),this}textSearch(r,s,{config:t,type:a=null}={}){let e=\"\";\"plain\"===a?e=\"pl\":\"phrase\"===a?e=\"ph\":\"websearch\"===a&&(e=\"w\");const i=void 0===t?\"\":`(${t})`;return this.url.searchParams.append(`${r}`,`${e}fts${i}.${s}`),this}fts(r,s,{config:t}={}){const a=void 0===t?\"\":`(${t})`;return this.url.searchParams.append(`${r}`,`fts${a}.${s}`),this}plfts(r,s,{config:t}={}){const a=void 0===t?\"\":`(${t})`;return this.url.searchParams.append(`${r}`,`plfts${a}.${s}`),this}phfts(r,s,{config:t}={}){const a=void 0===t?\"\":`(${t})`;return this.url.searchParams.append(`${r}`,`phfts${a}.${s}`),this}wfts(r,s,{config:t}={}){const a=void 0===t?\"\":`(${t})`;return this.url.searchParams.append(`${r}`,`wfts${a}.${s}`),this}filter(r,s,t){return this.url.searchParams.append(`${r}`,`${s}.${t}`),this}match(r){return Object.keys(r).forEach(s=>{this.url.searchParams.append(`${s}`,`eq.${r[s]}`)}),this}}exports.default=t;"},"sourceMaps":null,"error":null,"hash":"f1910006952334d70dd4ad6b0002da7d","cacheData":{"env":{}}}